buildscript {
   repositories {
      mavenLocal()
      mavenCentral()
   }
   dependencies {
      classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
   }
}

plugins {
   id "io.spring.dependency-management" version "1.0.6.RELEASE"
   id "com.github.johnrengelman.shadow" version "4.0.3"
   id "org.jetbrains.kotlin.jvm" version "1.3.20"
   id "org.jetbrains.kotlin.kapt" version "1.3.20"
   id "org.jetbrains.kotlin.plugin.allopen" version "1.3.20"
   id "org.jetbrains.kotlin.plugin.noarg" version "1.3.20"
   id "jacoco"
   id "application"
   id "groovy"
}

apply plugin: 'org.openapi.generator'

version "${cynergiRelease}"
group "com.hightouchinc.cynergi"

repositories {
   mavenLocal()
   mavenCentral()
   maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
   imports {
      mavenBom 'io.micronaut:micronaut-bom:1.0.4'
   }
}

dependencies {
   compile "io.micronaut.configuration:micronaut-jdbc-hikari"
   compile "io.micronaut.configuration:micronaut-flyway:1.0.0.RC2"
   compile "io.micronaut:micronaut-http-client"
   compile "io.micronaut:micronaut-http-server-netty"
   compile "io.micronaut.configuration:micronaut-hibernate-validator"
   compile "io.micronaut:micronaut-runtime"
   compile "io.micronaut:micronaut-spring"
   compile "org.codehaus.groovy:groovy-all:2.5.4"
   
   compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
   compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
   compile "org.springframework:spring-jdbc:5.0.10.RELEASE"
   compile "io.swagger.core.v3:swagger-annotations"
   compile "org.postgresql:postgresql:42.2.5"
   compile "org.apache.commons:commons-lang3:3.8.1"

   kapt "io.micronaut.configuration:micronaut-openapi"
   kapt "io.micronaut:micronaut-inject-java"
   kapt "io.micronaut:micronaut-validation"
   kaptTest "io.micronaut:micronaut-inject-java"

   runtime "ch.qos.logback:logback-classic:1.2.3"
   runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"

   testCompile("org.spockframework:spock-core") {
      exclude group: "org.codehaus.groovy", module: "groovy-all"
   }
   testCompile "io.micronaut:micronaut-inject-groovy"
   testCompile "io.micronaut:micronaut-runtime-groovy"
   testCompile "junit:junit:4.12"
   testCompile "io.micronaut:micronaut-inject-java"
   testCompile "com.github.javafaker:javafaker:0.16"
   testRuntime "net.bytebuddy:byte-buddy:1.8.21"
   testRuntime "org.objenesis:objenesis:2.6"
}

shadowJar {
   mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dmicronaut.environments=local')

mainClassName = "com.hightouchinc.cynergi.middleware.Application"

jacoco {
   toolVersion = "0.8.2"
}

allOpen {
   annotation("io.micronaut.aop.Around")
   annotation("javax.inject.Singleton")
}

noArg {
   annotation("com.hightouchinc.cynergi.middleware.dto.DataTransferObject")
   invokeInitializers = true
}

compileKotlin {
   kotlinOptions {
      jvmTarget = '1.8'
      //Will retain parameter names for Java reflection
      javaParameters = true
   }
}

compileTestKotlin {
   kotlinOptions {
      jvmTarget = '1.8'
      javaParameters = true
   }
}

openApiGenerate {
   generatorName = "typescript-axios"
   inputSpec = "$buildDir/tmp/kapt3/classes/main/META-INF/swagger/swagger.yml".toString()
   validateSpec = false
   configOptions = [
      npmName: "cynergi-axios-client",
      npmVersion: "${cynergiRelease}"
   ]
}

tasks.withType(JavaExec) {
   // Assign all Java system properties from
   // the command line to the JavaExec task.
   systemProperties System.properties
}
